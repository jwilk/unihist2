#!/usr/bin/python3

# Copyright Â© 2021 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

import collections
import sys
import unicodedata

chunk_size = 64 * 1024

def main():
    data = collections.Counter()
    while True:
        chunk = sys.stdin.read(chunk_size)
        if not chunk:
            break
        for ch in chunk:
            data[ch] += 1
    for ch, count in sorted(data.items()):
        pt = ord(ch)
        cat = unicodedata.category(ch)
        name = unicodedata.name(ch, '')
        if not name:
            if cat == 'Cn':
                name = 'non-character'
            elif cat == 'Cc':
                # TODO: elaborate
                name = 'control character'
        glyph = ch
        if cat[0] == 'C':
            glyph = ''
        elif cat[0] == 'M':
            glyph = '\N{DOTTED CIRCLE}' + ch
        print(f'{count}\t{glyph}\tU+{pt:04d}\t{name or ""}')

if __name__ == '__main__':
    main()

# vim:ts=4 sts=4 sw=4 et
