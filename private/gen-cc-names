#!/usr/bin/env perl

# Copyright Â© 2024 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

no lib '.';  # CVE-2016-1238

use strict;
use warnings;
use v5.14;

use English qw(-no_match_vars);
use Unicode::UCD qw();
use autodie;

my $prog = $PROGRAM_NAME =~ s{.*/}{}r;
say "# Generated by private/$prog:";
my @invlist = Unicode::UCD::prop_invlist('gc=Cc');
while (@invlist) {
    my ($min, $max) = splice @invlist, 0, 2;
    $max--;
    for my $n ($min..$max) {
        my $info = Unicode::UCD::charinfo($n);
        $_ = $info->{unicode10};
        if (not $_) {
            state %fallback = (
                "\x80" => 'PADDING CHARACTER',
                "\x81" => 'HIGH OCTET PRESET',
                "\x84" => 'INDEX',
                "\x99" => 'SINGLE GRAPHIC CHARACTER INTRODUCER',
            );
            $_ = $fallback{chr $n};
        }
        if (not $_) {
            my $msg = sprintf 'no name for U+%04X', $n;
            die $msg;
        };
        s/ [(].*//;
        if ($_ eq 'BELL') {
            # U+0007 was BELL in Unicode 1.0,
            # but in Unicode 6.0 this name was reused for U+1F514 BELL.
            $_ = 'ALERT';
        }
        my ($m) = Unicode::UCD::namedseq($_)
            or die "$_ is not a character name";
        if ($n != $m) {
            my $msg = sprintf '%s is U+%04X, not U+%04X', $_, $m, $n;
            die $msg;
        }
        printf "    '\\x%02X': '%s',\n", $n, $_;
    }
}

# vim:ts=4 sts=4 sw=4 et
