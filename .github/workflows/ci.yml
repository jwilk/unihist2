name: CI
on:
- push
- pull_request
jobs:
  main:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
        - python-version: '3.7'
          os: ubuntu-20.04
        - python-version: '3.8'
          os: ubuntu-20.04
        - python-version: '3.9'
          os: ubuntu-20.04
        - python-version: '3.10'
          os: ubuntu-22.04
        - python-version: '3.11'
          os: ubuntu-22.04
        - python-version: '3.11'
          os: ubuntu-22.04
          unicodedata2: unicodedata2
        - python-version: '3.12'
          os: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: set up pip cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key:
          pip-${{matrix.os}}-python${{matrix.python-version}}-${{matrix.unicodedata2}}
        restore-keys:
          pip-${{matrix.os}}-python${{matrix.python-version}}-
    - name: set up Python ${{matrix.python-version}}
      uses: actions/setup-python@v5
      with:
        python-version: ${{matrix.python-version}}
    - name: pip install wheel
      run: |
        python3 -m pip install wheel
    - name: pip install regex
      run: |
        python3 -m pip install --verbose regex
    - name: pip install unicodedata2
      if: ${{matrix.unicodedata2}}
      run: |
        python3 -m pip install --verbose ${{matrix.unicodedata2}}
    - name: run tests
      run: |
        make test verbose=1
    - name: set up PATH
      run: |
        PATH="$PATH:$HOME/.local/bin"
        echo "$PATH" >> $GITHUB_PATH
    - name: install
      run: |
        make install PREFIX=~/.local
    - name: check whether the executable was installed correctly
      run: |
        cd /
        command -v unihist2
    - name: run post-install tests
      run: |
        rm unihist2
        make test-installed verbose=1
        git restore unihist2
    - name: run pydiatra
      run: |
        python3 -m pip install pydiatra
        python3 -m pydiatra -v .
    - name: run pyflakes
      run: |
        python3 -m pip install pyflakes
        python3 -m pyflakes .
    - name: run pylint
      run: |
        python3 -m pip install pylint
        python3 -m pylint unihist2
    - name: check README syntax
      run: |
        python3 -m pip install restructuredtext-lint pygments
        rst-lint --level=info --encoding=UTF-8 README
  nonpython:
    strategy:
      matrix:
        os:
        - debian:12  # bookworm (Unicode 14)
        - debian:unstable # (Unicode >= 15)
    runs-on: ubuntu-latest
    container: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v4
    - name: set up APT
      run: |
        printf 'Apt::Install-Recommends "false";\n' | tee -a /etc/apt/apt.conf
        apt-get update
    - name: install deps
      run: |
        apt-get install -y libperl-critic-perl
    - name: run perlcritic
      run: |
        perlcritic $(grep -rl '/env perl$' .)
    - name: update generated code
      run: |
        cp unihist2 unihist2.orig
        private/update-gen-code
        diff -u unihist2.orig unihist2
        rm unihist2.orig

# vim:ts=2 sts=2 sw=2 et
